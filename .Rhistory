n_iter = 100
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp))
ci <-  myCI(cl,(mean+e)*(n_samp**0.5)/sd, n_samp, sd)
print(ci)
count <- count +  between(e, ci[1], ci[2])
}
print(count)
print(count/n_iter)
}
n_iter = 100
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=3))
ci <-  myCI(cl,mean, n_samp, sd)
print(ci)
count <- count +  between(e, ci[1], ci[2])
}
print(count)
print(count/n_iter)
}
n_iter = 100
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=3))
ci <-  myCI(cl,mean, n_samp, sd)
#print(ci)
count <- count +  between(e, ci[1], ci[2])
}
print(count)
print(count/n_iter)
}
n_iter = 1000
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(e, ci[1], ci[2])
}
print(count)
print(count/n_iter)
}
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(e, ci[1], ci[2])
}
print(count)
print(count/n_iter)
}
n_iter = 1000
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(e, ci[1], ci[2])
}
print(count)
print(count/n_iter)
}
n_iter = 1000
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(e, ci[1], ci[2])
}
print(count)
print(count/n_iter)
}
n_iter = 1000
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(e, ci[1], ci[2])
}
return(count/n_iter)
}
myCI <- function(cl,mean, n, sd)
{
alpha = 1-cl
# the max deviation between the expected value and the mean of the sampling
# with the desired CL
max_d = qnorm(1 - alpha/2)*(sd/n**0.5)
return(c(mean -max_d, mean + max_d))
}
n_iter = 1000
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
rep(mean(rnorm(n_samp, mean=e, sd=sd)))
n_iter = 100000
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
n_iter = 10000
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(n_iter, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
for (n_iter in c(100, 1000, 10000))
{
ci_simulation(n_iter, n_samp, cl, sd, e)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
for (n_iter in c(100, 1000, 10000))
{
p <-  ci_simulation(n_iter, n_samp, cl, sd, e)
p
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
for (n_iter in c(100, 1000, 10000))
{
p <-  ci_simulation(n_iter, n_samp, cl, sd, e)
p
}
p
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_log_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(log(e), log(ci[1]), log(ci[2]))
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_log_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(log(e), log(ci[1]), log(ci[2]))
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_log_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(log(e), log(ci[1]), log(ci[2]))
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_log_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(log(e), log(ci[1]), log(ci[2]))
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_log_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(log(e), log(ci[1]), log(ci[2]))
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_log_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(log(e), log(ci[1]), log(ci[2]))
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_log_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(log(e), log(ci[1]), log(ci[2]))
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
qnorm
z=qnorm(0.975)
z
y=(z*3)**2
y
y/0.01**2
z
z*3
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
log(12)
0.75*0.25
0.75*0.25/(0.05**2)
0.6*0.4/75
0.0032**0.5
s=0.0032**0.5
b=s/(75**0.5)
b
a=0.2
a/b
s
0.2/s
rnorm(3.535)
pnorm(3.535)
1-0.9997
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
library(tidyverse)
myCI <- function(cl,mean, n, sd)
{
alpha = 1-cl
# the max deviation between the expected value and the mean of the sampling
# with the desired CL
max_d = qnorm(1 - alpha/2)*(sd/n**0.5)
return(c(mean -max_d, mean + max_d))
}
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(e, ci[1], ci[2])
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(e, ci[1], ci[2])
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation <- function(n_iter, n_samp,cl, sd, e)
{
count <- 0
for (i in 1:n_iter)
{
mean <-  mean(rnorm(n_samp, mean=e, sd=sd))
ci <-  myCI(cl,mean, n_samp, sd)
count <- count +  between(e, ci[1], ci[2])
}
return(count/n_iter)
}
n_samp = 35
cl = 0.99
sd = 3
e = 12
ci_simulation(100, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
ci_simulation(1000, n_samp, cl, sd, e)
#שאלה 4 סעיף 1.c
curve(expr = (2*1.96/sqrt(x)),from = 1,to = 20,n=100,xlab = "n",ylab = "d")
lines(x = c(15.3664,15.3664),y = c(0,1),col="red")
lines(x = c(0,16),y = c(1,1),col="dark green")
lines(x = c(16,16),y = c(0,1),col="purple")
#שאלה 4 סעיף 3 .b
the_sample <- replicate(10000,rnorm(9,mean = 0,sd = 1),3)
confidence_interval <- function(a,x,s) {
Upper <- mean(x)+qnorm(1-(a/2))*s/sqrt(9)
Lower <-mean(x)-qnorm(1-(a/2))*s/sqrt(9)
return(c(Upper,Lower))
}
result1 <- array(dim = c(10000,2))
test1 <- c()
for (i in 1:10000) {
result1[i,]<- confidence_interval(0.05,the_sample[,i],1)
test1[i] <- result1[i,1]>0&result1[i,2]<0
}
result2 <- array(dim = c(10000,2))
test2 <- c()
for (i in 1:10000) {
result2[i,]<- confidence_interval(0.05,the_sample[,i],sqrt(sum((the_sample[,i]-mean(the_sample[,i]))^2)/8))
test2[i] <- result2[i,1]>0&result2[i,2]<0
}
mean(test1)
mean(test2)
